% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bmd.R
\name{compute_bmd_bounds_parallel}
\alias{compute_bmd_bounds_parallel}
\title{Compute BMD Bounds using Bootstrapping with Parallel Bootstrap Sampling}
\usage{
compute_bmd_bounds_parallel(
  dose_rider_results,
  dose_col = "dose",
  sample_col = "sample",
  ci_level = 0.95,
  covariates = c(),
  omic = "rnaseq",
  n_bootstrap = 1000,
  num_cores = 5
)
}
\arguments{
\item{dose_rider_results}{A DoseRider object containing results of the analysis.}

\item{dose_col}{Name of the column representing dose information.}

\item{sample_col}{Name of the column representing sample information.}

\item{ci_level}{Confidence interval level, default is 0.95.}

\item{covariates}{Optional, vector specifying the covariate column(s) in `se`.}

\item{omic}{Type of omics data, defaults to "rnaseq".}

\item{n_bootstrap}{The number of bootstrap samples to generate. Default is 1000.}

\item{num_cores}{The number of cores to use for parallel processing of bootstrap samples. Default is 5.}
}
\value{
A data frame containing the lower and upper BMD bounds for each significant gene set.
}
\description{
This function calculates the lower and upper bounds of the Benchmark Dose (BMD)
using bootstrapping on the raw data for significant gene sets, with the bootstrap
sampling process parallelized across multiple cores.
}
\examples{
\dontrun{
data("SummarizedExperiment")
gmt <- list(geneSet1 = list(genes = c("gene1", "gene2")))
results <- DoseRider(se, gmt, "dose", "sample", "covariate", "rnaseq", modelType = "GAMM")
bmd_bounds <- compute_bmd_bounds_parallel(results, "dose", "sample", n_bootstrap = 1000, ci_level = 0.95, num_cores = 4)
print(bmd_bounds)
}

}
